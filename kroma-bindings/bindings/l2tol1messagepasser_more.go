// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const L2ToL1MessagePasserStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"contracts/L2/L2ToL1MessagePasser.sol:L2ToL1MessagePasser\",\"label\":\"sentMessages\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_mapping(t_bytes32,t_bool)\"},{\"astId\":1001,\"contract\":\"contracts/L2/L2ToL1MessagePasser.sol:L2ToL1MessagePasser\",\"label\":\"msgNonce\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_uint240\"}],\"types\":{\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_bytes32\":{\"encoding\":\"inplace\",\"label\":\"bytes32\",\"numberOfBytes\":\"32\"},\"t_mapping(t_bytes32,t_bool)\":{\"encoding\":\"mapping\",\"label\":\"mapping(bytes32 =\u003e bool)\",\"numberOfBytes\":\"32\",\"key\":\"t_bytes32\",\"value\":\"t_bool\"},\"t_uint240\":{\"encoding\":\"inplace\",\"label\":\"uint240\",\"numberOfBytes\":\"30\"}}}"

var L2ToL1MessagePasserStorageLayout = new(solc.StorageLayout)

var L2ToL1MessagePasserDeployedBin = "0x6080604052600436106100695760003560e01c806382e3702d1161004357806382e3702d1461012a578063c2b3e5ac1461016a578063ecc704281461017d57600080fd5b80633f827a5a1461009257806344df8e70146100bf57806354fd4d50146100d457600080fd5b3661008d5761008b33620186a0604051806020016040528060008152506101bb565b005b600080fd5b34801561009e57600080fd5b506100a7600081565b60405161ffff90911681526020015b60405180910390f35b3480156100cb57600080fd5b5061008b61033d565b3480156100e057600080fd5b5061011d6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516100b69190610467565b34801561013657600080fd5b5061015a610145366004610481565b60006020819052908152604090205460ff1681565b60405190151581526020016100b6565b61008b6101783660046104c9565b6101bb565b34801561018957600080fd5b506001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff166040519081526020016100b6565b60006102306040518060c001604052806101f46001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b815233602082015273ffffffffffffffffffffffffffffffffffffffff871660408201523460608201526080810186905260a001849052610375565b600081815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055905073ffffffffffffffffffffffffffffffffffffffff8416336102aa6001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690565b7f02a52367d10742d8032712c1bb8e0144ff1ec5ffda1ed7d70bb05a2744955054348787876040516102df94939291906105cd565b60405180910390a45050600180547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082168301167fffff0000000000000000000000000000000000000000000000000000000000009091161790555050565b47610347816103c2565b60405181907f7967de617a5ac1cc7eba2d6f37570a0135afa950d8bb77cdd35f0d0b4e85a16f90600090a250565b80516020808301516040808501516060860151608087015160a088015193516000976103a59790969591016105fd565b604051602081830303815290604052805190602001209050919050565b6103de60005a83604051806020016040528060008152506103e2565b5050565b600080600080845160208601878a8af19695505050505050565b6000815180845260005b8181101561042257602081850181015186830182015201610406565b81811115610434576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061047a60208301846103fc565b9392505050565b60006020828403121561049357600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000606084860312156104de57600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461050257600080fd5b925060208401359150604084013567ffffffffffffffff8082111561052657600080fd5b818601915086601f83011261053a57600080fd5b81358181111561054c5761054c61049a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105925761059261049a565b816040528281528960208487010111156105ab57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b8481528360208201526080604082015260006105ec60808301856103fc565b905082606083015295945050505050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a083015261064860c08301846103fc565b9897505050505050505056fea164736f6c634300080f000a"


func init() {
	if err := json.Unmarshal([]byte(L2ToL1MessagePasserStorageLayoutJSON), L2ToL1MessagePasserStorageLayout); err != nil {
		panic(err)
	}

	layouts["L2ToL1MessagePasser"] = L2ToL1MessagePasserStorageLayout
	deployedBytecodes["L2ToL1MessagePasser"] = L2ToL1MessagePasserDeployedBin
	immutableReferences["L2ToL1MessagePasser"] = false
}
